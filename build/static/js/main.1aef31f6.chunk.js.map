{"version":3,"sources":["components/Card.js","components/ToDo.js","App.js","index.js"],"names":["Card","taskT","i","editTask","showModal","setIdRemove","Paragraph","Typography","className","editable","onChange","e","copyable","tooltips","icon","SmileOutlined","SmileFilled","text","DeleteTwoTone","onClick","id","type","ToDO","useState","visible","setVisible","confirmLoading","setConfirmLoading","modalText","entary","setEntary","idRemove","line","setLine","removeTask","filter","item","setTimeout","notifiDelete","map","notification","info","message","description","notifiAdded","placeholder","allowClear","target","value","length","classNam","loading","title","onOk","onCancel","console","log","Header","Layout","Content","Sider","Footer","App","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","theme","mode","defaultSelectedKeys","Item","UserOutlined","VideoCameraOutlined","style","padding","margin","minHeight","ToDo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1aef31f6.chunk.js","sourcesContent":["import {  Typography  } from 'antd';\r\nimport {  SmileOutlined, SmileFilled, DeleteTwoTone , RadiusBottomrightOutlined,} from '@ant-design/icons';\r\n\r\nfunction Card({taskT, i, editTask, showModal,setIdRemove}) {\r\n    const { Paragraph } = Typography;\r\n    return (\r\n        <div className=\"task\" key={i}>\r\n            <Paragraph className='input_edit' editable={{ onChange: e => editTask(e, i+1)  }}\r\n                copyable={{ tooltips: false,\r\n                icon: [<SmileOutlined key=\"copy-icon\" />,\r\n                <SmileFilled key=\"copied-icon\" />],\r\n                tooltips: ['click here', 'you clicked!!'] }} \r\n            >\r\n                <span className='text_task'>{taskT.text}</span>\r\n            </Paragraph>\r\n            <DeleteTwoTone className=\"removeTask\"  onClick={ ()=>{\r\n                showModal()\r\n                 {setIdRemove(taskT.id)} \r\n            } } type=\"primary\" > </DeleteTwoTone>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React, { useEffect, useState } from 'react'\r\nimport { Button, Typography, Input ,notification, Modal, AutoComplete  } from 'antd';\r\n\r\n\r\nimport Card from './Card';\r\n\r\nfunction ToDO() {\r\n    const [visible, setVisible] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [modalText, setModalText] = useState('Do you want delete this task from list?');\r\n  \r\n    \r\n\r\n    const [entary, setEntary] = useState('')\r\n    const [idRemove, setIdRemove] = useState(0)\r\n    const [ line, setLine ] = useState([\r\n        {id:1, text: 'this my first task 1111'},\r\n        {id:2, text: 'this my second task 222'},\r\n        {id:3, text: 'this my third task 33333333'},\r\n        {id:4, text: 'this my third task 444'},\r\n        {id:5, text: 'this my third task 555555'},\r\n    ])\r\n    const listenEntary  = e =>{\r\n        setEntary(e.target.value)\r\n    }\r\n    const addTask =() =>{\r\n        setLine(line => [...line, { id: (line.length+1), text: entary }]);\r\n        notifiAdded()\r\n        setEntary(null)\r\n    }\r\n    const removeTask = ()=>{\r\n        setLine(line.filter(item => item.id !== idRemove));\r\n        setConfirmLoading(true);\r\n        setTimeout(() => {\r\n          setVisible(false);\r\n          setConfirmLoading(false);\r\n        notifiDelete()\r\n    }, 1000);\r\n    }\r\n    const editTask = (e, i) =>{\r\n        setLine(\r\n            line.map(item => \r\n                item.id === i \r\n                ? {...item, text : e} \r\n                : item \r\n        ))\r\n    }\r\n\r\n    const notifiDelete = () => {\r\n        notification.info({\r\n          message: 'Remove Task',\r\n          description: 'Delete Task Done.',\r\n        });\r\n    };\r\n\r\n    const notifiAdded = () => {\r\n    notification.info({\r\n        message: 'Add Task',\r\n        description:  entary,\r\n    });\r\n    };\r\n\r\n        \r\n    const showModal = () => {\r\n        setVisible(true);\r\n      };\r\n    \r\n      const handleCancel = () => {\r\n        console.log('Clicked cancel button');\r\n        setVisible(false);\r\n      };\r\n\r\n    return (\r\n        <div className='todo'>\r\n            <div className=\"add_task\">\r\n                <Input placeholder=\"enter your Task..\" allowClear onChange={listenEntary}  value={entary}/>\r\n                <button className=\"btn_added\"  onClick={addTask}>\r\n                    <Button type=\"primary\" classNam='' loading={0} >\r\n                        Add\r\n                    </Button>\r\n                </button>\r\n            </div>\r\n            <div className=\"wrapper_tasks\">\r\n                {line.map((taskT, i) => {\r\n                    return <Card taskT={taskT} i={i} editTask={editTask} removeTask={removeTask} setIdRemove={setIdRemove} showModal={showModal}/>\r\n                })}\r\n            </div>\r\n            <Modal\r\n                title=\"Note\"\r\n                visible={visible}\r\n                onOk={removeTask}\r\n                confirmLoading={confirmLoading}\r\n                onCancel={handleCancel}>\r\n                <p>{modalText}</p>\r\n            </Modal>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDO","import { DatePicker, Layout, Menu } from 'antd';\nimport 'antd/dist/antd.css'\nimport { UploadOutlined, UserOutlined, VideoCameraOutlined } from '@ant-design/icons';\nimport ToDo from './components/ToDo';\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nfunction App() {\n  return (\n    <div>\n      {/* <DatePicker />\n       */}\n\n  <Layout className=''>\n      <Sider className='Layout'\n        breakpoint=\"lg\"\n        collapsedWidth=\"0\"\n        onBreakpoint={broken => {\n          console.log(broken);\n        }}\n        onCollapse={(collapsed, type) => {\n          console.log(collapsed, type);\n        }}\n      >\n        <div className=\"logo\" />\n        <Menu className='' theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['4']}>\n          <Menu.Item  className='' key=\"1\" icon={<UserOutlined />}>\n            My ToDO\n          </Menu.Item>\n          <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\n            done\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout>\n        <Header className=\"site-layout-sub-header-background\" style={{ padding: 0 }} />\n        <Content style={{ margin: '24px 16px 0' }}>\n          <div className=\"site-layout-background content\" style={{ padding: 24, minHeight: 360 }}>\n            <ToDo />\n          </div>\n        </Content>\n      </Layout>\n    </Layout>,\n    \n   \n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}